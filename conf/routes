# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~


# An example controller showing a sample home page
GET         /                                                                                      controllers.HomeController.index

# Project endpoints
GET         /projects                                                                              controllers.ProjectController.all(request : Request)
POST        /projects                                                                              controllers.ProjectController.create(request : Request)
GET         /projects/:projectId                                                                   controllers.ProjectController.byId(projectId : java.util.UUID)

# Branch endpoints
GET         /projects/:projectId/branches                                                          controllers.BranchController.byProject(projectId : java.util.UUID, request : Request)
POST        /projects/:projectId/branches                                                          controllers.BranchController.createWithProjectId(projectId : java.util.UUID, request : Request)
GET         /projects/:projectId/branches/:branchId                                                controllers.BranchController.byProjectAndId(projectId : java.util.UUID, branchId : java.util.UUID)

# Commit endpoints
GET         /projects/:projectId/commits                                                           controllers.CommitController.byProject(projectId : java.util.UUID, request : Request)
POST        /projects/:projectId/commits                                                           controllers.CommitController.createWithProjectId(projectId : java.util.UUID, branchId : java.util.Optional[java.util.UUID], request : Request)
GET         /projects/:projectId/commits/:commitId                                                 controllers.CommitController.byProjectAndId(projectId : java.util.UUID, commitId : java.util.UUID)

# Element endpoints
GET         /projects/:projectId/commits/:commitId/elements                                        controllers.ElementController.getElementsByProjectIdCommitId(projectId : java.util.UUID, commitId : java.util.UUID, request : Request)
GET         /projects/:projectId/commits/:commitId/elements/:elementId                             controllers.ElementController.getElementByProjectIdCommitIdElementId(projectId : java.util.UUID, commitId : java.util.UUID, elementId : java.util.UUID, request : Request)
GET         /projects/:projectId/commits/:commitId/roots                                           controllers.ElementController.getRootsByProjectIdCommitId(projectId : java.util.UUID, commitId : java.util.UUID, request : Request)

# Relationship endpoints
GET         /projects/:projectId/commits/:commitId/elements/:relatedElementId/relationships        controllers.RelationshipController.getRelationshipsByProjectIdCommitIdRelatedElementId(projectId : java.util.UUID, commitId : java.util.UUID, relatedElementId : java.util.UUID, direction : java.util.Optional[String], request : Request)

# Query endpoints
GET         /projects/:projectId/queries                                                           controllers.QueryController.byProject(projectId : java.util.UUID, request : Request)
POST        /projects/:projectId/queries                                                           controllers.QueryController.createWithProjectId(projectId : java.util.UUID, request : Request)
GET         /projects/:projectId/queries/:queryId                                                  controllers.QueryController.byProjectAndId(projectId : java.util.UUID, queryId : java.util.UUID)
GET         /projects/:projectId/queries/:queryId/results                                          controllers.QueryController.getQueryResultsByProjectIdQueryId(projectId : java.util.UUID, queryId : java.util.UUID, commitId : java.util.Optional[java.util.UUID], request : Request)
GET         /projects/:projectId/query-results                                                     controllers.QueryController.getQueryResultsByProjectIdQuery(projectId : java.util.UUID, commitId : java.util.Optional[java.util.UUID], request : Request)
POST        /projects/:projectId/query-results                                                     controllers.QueryController.getQueryResultsByProjectIdQuery(projectId : java.util.UUID, commitId : java.util.Optional[java.util.UUID], request : Request)

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                                                          controllers.Assets.versioned(path="/public", file: Asset)

GET         /docs/                                                                                 controllers.Assets.at(path="/public/swagger", file="index.html")
GET         /docs/*file                                                                            controllers.Assets.at(path="/public/swagger", file)
GET         /jsonld/*file                                                                          controllers.Assets.at(path="/public/jsonld", file)