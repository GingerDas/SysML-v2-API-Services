@AnyMetaDefs(value = {
        @AnyMetaDef(name = "ReturnParameterMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class),
                }),
        @AnyMetaDef(name = "ItemFlowMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class),
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                }),
        @AnyMetaDef(name = "StateUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class),
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                }),
        @AnyMetaDef(name = "ImportMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Import", targetEntity = ImportImpl.class),
                        @MetaValue(value = "ConditionalImport", targetEntity = ConditionalImportImpl.class),
                }),
        @AnyMetaDef(name = "LiteralStringMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class),
                }),
        @AnyMetaDef(name = "IndividualDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "IndividualDefinition", targetEntity = IndividualDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "QueryPathExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "QueryPathExpression", targetEntity = QueryPathExpressionImpl.class),
                }),
        @AnyMetaDef(name = "ActivityMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Activity", targetEntity = ActivityImpl.class),
                        @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "DecisionNodeMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                }),
        @AnyMetaDef(name = "GeneralizationMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Generalization", targetEntity = GeneralizationImpl.class),
                        @MetaValue(value = "ConjugatedPortTyping", targetEntity = ConjugatedPortTypingImpl.class),
                        @MetaValue(value = "Redefinition", targetEntity = RedefinitionImpl.class),
                        @MetaValue(value = "FeatureTyping", targetEntity = FeatureTypingImpl.class),
                        @MetaValue(value = "Subsetting", targetEntity = SubsettingImpl.class),
                        @MetaValue(value = "Superclassing", targetEntity = SuperclassingImpl.class),
                }),
        @AnyMetaDef(name = "AssertConstraintUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                }),
        @AnyMetaDef(name = "FeatureMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class),
                        @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class),
                        @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class),
                        @MetaValue(value = "QueryPathExpression", targetEntity = QueryPathExpressionImpl.class),
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "Feature", targetEntity = FeatureImpl.class),
                        @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class),
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                        @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class),
                        @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class),
                        @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class),
                        @MetaValue(value = "ValueProperty", targetEntity = ValuePropertyImpl.class),
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                        @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class),
                        @MetaValue(value = "Property", targetEntity = PropertyImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "Usage", targetEntity = UsageImpl.class),
                        @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class),
                        @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class),
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                        @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class),
                        @MetaValue(value = "Parameter", targetEntity = ParameterImpl.class),
                        @MetaValue(value = "ItemFeature", targetEntity = ItemFeatureImpl.class),
                        @MetaValue(value = "PartProperty", targetEntity = PartPropertyImpl.class),
                        @MetaValue(value = "ReferenceProperty", targetEntity = ReferencePropertyImpl.class),
                        @MetaValue(value = "SourceEnd", targetEntity = SourceEndImpl.class),
                        @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class),
                        @MetaValue(value = "SnapshotFeature", targetEntity = SnapshotFeatureImpl.class),
                        @MetaValue(value = "InstanceCreationExpression", targetEntity = InstanceCreationExpressionImpl.class),
                        @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class),
                        @MetaValue(value = "ItemFlowFeature", targetEntity = ItemFlowFeatureImpl.class),
                        @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                        @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class),
                        @MetaValue(value = "TargetEnd", targetEntity = TargetEndImpl.class),
                        @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class),
                        @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class),
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                        @MetaValue(value = "TimeSliceFeature", targetEntity = TimeSliceFeatureImpl.class),
                        @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class),
                        @MetaValue(value = "Step", targetEntity = StepImpl.class),
                        @MetaValue(value = "LiteralReal", targetEntity = LiteralRealImpl.class),
                        @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                        @MetaValue(value = "Multiplicity", targetEntity = MultiplicityImpl.class),
                        @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class),
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                        @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                        @MetaValue(value = "TransferActionUsage", targetEntity = TransferActionUsageImpl.class),
                        @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class),
                        @MetaValue(value = "IndividualUsage", targetEntity = IndividualUsageImpl.class),
                        @MetaValue(value = "ItemFlowEnd", targetEntity = ItemFlowEndImpl.class),
                        @MetaValue(value = "BlockExpression", targetEntity = BlockExpressionImpl.class),
                        @MetaValue(value = "BlockProperty", targetEntity = BlockPropertyImpl.class),
                        @MetaValue(value = "LiteralUnbounded", targetEntity = LiteralUnboundedImpl.class),
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                        @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class),
                        @MetaValue(value = "SequenceConstructionExpression", targetEntity = SequenceConstructionExpressionImpl.class),
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                }),
        @AnyMetaDef(name = "ConjugatedPortTypingMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ConjugatedPortTyping", targetEntity = ConjugatedPortTypingImpl.class),
                }),
        @AnyMetaDef(name = "BooleanExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                        @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class),
                }),
        @AnyMetaDef(name = "RequirementConstraintMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class),
                }),
        @AnyMetaDef(name = "LifeClassMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class),
                }),
        @AnyMetaDef(name = "MembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class),
                        @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class),
                        @MetaValue(value = "Membership", targetEntity = MembershipImpl.class),
                        @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class),
                        @MetaValue(value = "FeatureValue", targetEntity = FeatureValueImpl.class),
                        @MetaValue(value = "FeatureMembership", targetEntity = FeatureMembershipImpl.class),
                        @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class),
                        @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class),
                        @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class),
                }),
        @AnyMetaDef(name = "MofObjectMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class),
                        @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class),
                        @MetaValue(value = "Import", targetEntity = ImportImpl.class),
                        @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class),
                        @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class),
                        @MetaValue(value = "IndividualDefinition", targetEntity = IndividualDefinitionImpl.class),
                        @MetaValue(value = "QueryPathExpression", targetEntity = QueryPathExpressionImpl.class),
                        @MetaValue(value = "Activity", targetEntity = ActivityImpl.class),
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "Generalization", targetEntity = GeneralizationImpl.class),
                        @MetaValue(value = "Feature", targetEntity = FeatureImpl.class),
                        @MetaValue(value = "ConjugatedPortTyping", targetEntity = ConjugatedPortTypingImpl.class),
                        @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class),
                        @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class),
                        @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class),
                        @MetaValue(value = "Membership", targetEntity = MembershipImpl.class),
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                        @MetaValue(value = "Definition", targetEntity = DefinitionImpl.class),
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class),
                        @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class),
                        @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                        @MetaValue(value = "Package", targetEntity = PackageImpl.class),
                        @MetaValue(value = "ImportCondition", targetEntity = ImportConditionImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "Classifier", targetEntity = ClassifierImpl.class),
                        @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class),
                        @MetaValue(value = "Redefinition", targetEntity = RedefinitionImpl.class),
                        @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class),
                        @MetaValue(value = "ValueProperty", targetEntity = ValuePropertyImpl.class),
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                        @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class),
                        @MetaValue(value = "Association", targetEntity = AssociationImpl.class),
                        @MetaValue(value = "DataType", targetEntity = DataTypeImpl.class),
                        @MetaValue(value = "Property", targetEntity = PropertyImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "Usage", targetEntity = UsageImpl.class),
                        @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class),
                        @MetaValue(value = "FeatureValue", targetEntity = FeatureValueImpl.class),
                        @MetaValue(value = "Annotation", targetEntity = AnnotationImpl.class),
                        @MetaValue(value = "PortConjugation", targetEntity = PortConjugationImpl.class),
                        @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class),
                        @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class),
                        @MetaValue(value = "Type", targetEntity = TypeImpl.class),
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                        @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class),
                        @MetaValue(value = "Relationship", targetEntity = RelationshipImpl.class),
                        @MetaValue(value = "Parameter", targetEntity = ParameterImpl.class),
                        @MetaValue(value = "ItemFeature", targetEntity = ItemFeatureImpl.class),
                        @MetaValue(value = "FeatureTyping", targetEntity = FeatureTypingImpl.class),
                        @MetaValue(value = "PartProperty", targetEntity = PartPropertyImpl.class),
                        @MetaValue(value = "FeatureMembership", targetEntity = FeatureMembershipImpl.class),
                        @MetaValue(value = "ReferenceProperty", targetEntity = ReferencePropertyImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "ConditionalImport", targetEntity = ConditionalImportImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class),
                        @MetaValue(value = "SourceEnd", targetEntity = SourceEndImpl.class),
                        @MetaValue(value = "Subsetting", targetEntity = SubsettingImpl.class),
                        @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class),
                        @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class),
                        @MetaValue(value = "SnapshotFeature", targetEntity = SnapshotFeatureImpl.class),
                        @MetaValue(value = "InstanceCreationExpression", targetEntity = InstanceCreationExpressionImpl.class),
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                        @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class),
                        @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class),
                        @MetaValue(value = "ItemFlowFeature", targetEntity = ItemFlowFeatureImpl.class),
                        @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class),
                        @MetaValue(value = "AssociationBlock", targetEntity = AssociationBlockImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                        @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class),
                        @MetaValue(value = "Superclassing", targetEntity = SuperclassingImpl.class),
                        @MetaValue(value = "Block", targetEntity = BlockImpl.class),
                        @MetaValue(value = "Class", targetEntity = ClassImpl.class),
                        @MetaValue(value = "Conjugation", targetEntity = ConjugationImpl.class),
                        @MetaValue(value = "TargetEnd", targetEntity = TargetEndImpl.class),
                        @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class),
                        @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class),
                        @MetaValue(value = "Ownership", targetEntity = OwnershipImpl.class),
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                        @MetaValue(value = "TimeSliceFeature", targetEntity = TimeSliceFeatureImpl.class),
                        @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class),
                        @MetaValue(value = "Element", targetEntity = ElementImpl.class),
                        @MetaValue(value = "Step", targetEntity = StepImpl.class),
                        @MetaValue(value = "LiteralReal", targetEntity = LiteralRealImpl.class),
                        @MetaValue(value = "Function", targetEntity = FunctionImpl.class),
                        @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                        @MetaValue(value = "Multiplicity", targetEntity = MultiplicityImpl.class),
                        @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class),
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                        @MetaValue(value = "Comment", targetEntity = CommentImpl.class),
                        @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class),
                        @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class),
                        @MetaValue(value = "ValueType", targetEntity = ValueTypeImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                        @MetaValue(value = "TransferActionUsage", targetEntity = TransferActionUsageImpl.class),
                        @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class),
                        @MetaValue(value = "IndividualUsage", targetEntity = IndividualUsageImpl.class),
                        @MetaValue(value = "ItemFlowEnd", targetEntity = ItemFlowEndImpl.class),
                        @MetaValue(value = "BlockExpression", targetEntity = BlockExpressionImpl.class),
                        @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class),
                        @MetaValue(value = "BlockProperty", targetEntity = BlockPropertyImpl.class),
                        @MetaValue(value = "LiteralUnbounded", targetEntity = LiteralUnboundedImpl.class),
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                        @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class),
                        @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class),
                        @MetaValue(value = "SequenceConstructionExpression", targetEntity = SequenceConstructionExpressionImpl.class),
                        @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                }),
        @AnyMetaDef(name = "JoinNodeMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                }),
        @AnyMetaDef(name = "DefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "IndividualDefinition", targetEntity = IndividualDefinitionImpl.class),
                        @MetaValue(value = "Activity", targetEntity = ActivityImpl.class),
                        @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class),
                        @MetaValue(value = "Definition", targetEntity = DefinitionImpl.class),
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "AssociationBlock", targetEntity = AssociationBlockImpl.class),
                        @MetaValue(value = "Block", targetEntity = BlockImpl.class),
                        @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class),
                        @MetaValue(value = "ValueType", targetEntity = ValueTypeImpl.class),
                        @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "SuccessionItemFlowMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                }),
        @AnyMetaDef(name = "NullExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class),
                }),
        @AnyMetaDef(name = "ConstraintDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "ConjugatedPortDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "AcceptActionUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                }),
        @AnyMetaDef(name = "PackageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class),
                        @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class),
                        @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class),
                        @MetaValue(value = "IndividualDefinition", targetEntity = IndividualDefinitionImpl.class),
                        @MetaValue(value = "QueryPathExpression", targetEntity = QueryPathExpressionImpl.class),
                        @MetaValue(value = "Activity", targetEntity = ActivityImpl.class),
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "Feature", targetEntity = FeatureImpl.class),
                        @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class),
                        @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class),
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                        @MetaValue(value = "Definition", targetEntity = DefinitionImpl.class),
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class),
                        @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class),
                        @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                        @MetaValue(value = "Package", targetEntity = PackageImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "Classifier", targetEntity = ClassifierImpl.class),
                        @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class),
                        @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class),
                        @MetaValue(value = "ValueProperty", targetEntity = ValuePropertyImpl.class),
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                        @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class),
                        @MetaValue(value = "Association", targetEntity = AssociationImpl.class),
                        @MetaValue(value = "DataType", targetEntity = DataTypeImpl.class),
                        @MetaValue(value = "Property", targetEntity = PropertyImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "Usage", targetEntity = UsageImpl.class),
                        @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class),
                        @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class),
                        @MetaValue(value = "Type", targetEntity = TypeImpl.class),
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                        @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class),
                        @MetaValue(value = "Parameter", targetEntity = ParameterImpl.class),
                        @MetaValue(value = "ItemFeature", targetEntity = ItemFeatureImpl.class),
                        @MetaValue(value = "PartProperty", targetEntity = PartPropertyImpl.class),
                        @MetaValue(value = "ReferenceProperty", targetEntity = ReferencePropertyImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class),
                        @MetaValue(value = "SourceEnd", targetEntity = SourceEndImpl.class),
                        @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class),
                        @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class),
                        @MetaValue(value = "SnapshotFeature", targetEntity = SnapshotFeatureImpl.class),
                        @MetaValue(value = "InstanceCreationExpression", targetEntity = InstanceCreationExpressionImpl.class),
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                        @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class),
                        @MetaValue(value = "ItemFlowFeature", targetEntity = ItemFlowFeatureImpl.class),
                        @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class),
                        @MetaValue(value = "AssociationBlock", targetEntity = AssociationBlockImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                        @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class),
                        @MetaValue(value = "Block", targetEntity = BlockImpl.class),
                        @MetaValue(value = "Class", targetEntity = ClassImpl.class),
                        @MetaValue(value = "TargetEnd", targetEntity = TargetEndImpl.class),
                        @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class),
                        @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class),
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                        @MetaValue(value = "TimeSliceFeature", targetEntity = TimeSliceFeatureImpl.class),
                        @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class),
                        @MetaValue(value = "Step", targetEntity = StepImpl.class),
                        @MetaValue(value = "LiteralReal", targetEntity = LiteralRealImpl.class),
                        @MetaValue(value = "Function", targetEntity = FunctionImpl.class),
                        @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                        @MetaValue(value = "Multiplicity", targetEntity = MultiplicityImpl.class),
                        @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class),
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                        @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class),
                        @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class),
                        @MetaValue(value = "ValueType", targetEntity = ValueTypeImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                        @MetaValue(value = "TransferActionUsage", targetEntity = TransferActionUsageImpl.class),
                        @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class),
                        @MetaValue(value = "IndividualUsage", targetEntity = IndividualUsageImpl.class),
                        @MetaValue(value = "ItemFlowEnd", targetEntity = ItemFlowEndImpl.class),
                        @MetaValue(value = "BlockExpression", targetEntity = BlockExpressionImpl.class),
                        @MetaValue(value = "BlockProperty", targetEntity = BlockPropertyImpl.class),
                        @MetaValue(value = "LiteralUnbounded", targetEntity = LiteralUnboundedImpl.class),
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                        @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class),
                        @MetaValue(value = "SequenceConstructionExpression", targetEntity = SequenceConstructionExpressionImpl.class),
                        @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                }),
        @AnyMetaDef(name = "ImportConditionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ImportCondition", targetEntity = ImportConditionImpl.class),
                }),
        @AnyMetaDef(name = "RequirementUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                }),
        @AnyMetaDef(name = "InvocationExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class),
                        @MetaValue(value = "InstanceCreationExpression", targetEntity = InstanceCreationExpressionImpl.class),
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                        @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class),
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                }),
        @AnyMetaDef(name = "ClassifierMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "IndividualDefinition", targetEntity = IndividualDefinitionImpl.class),
                        @MetaValue(value = "Activity", targetEntity = ActivityImpl.class),
                        @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class),
                        @MetaValue(value = "Definition", targetEntity = DefinitionImpl.class),
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class),
                        @MetaValue(value = "Classifier", targetEntity = ClassifierImpl.class),
                        @MetaValue(value = "Association", targetEntity = AssociationImpl.class),
                        @MetaValue(value = "DataType", targetEntity = DataTypeImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class),
                        @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class),
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                        @MetaValue(value = "AssociationBlock", targetEntity = AssociationBlockImpl.class),
                        @MetaValue(value = "Block", targetEntity = BlockImpl.class),
                        @MetaValue(value = "Class", targetEntity = ClassImpl.class),
                        @MetaValue(value = "Function", targetEntity = FunctionImpl.class),
                        @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class),
                        @MetaValue(value = "ValueType", targetEntity = ValueTypeImpl.class),
                        @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "RedefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Redefinition", targetEntity = RedefinitionImpl.class),
                }),
        @AnyMetaDef(name = "ValuePropertyMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ValueProperty", targetEntity = ValuePropertyImpl.class),
                }),
        @AnyMetaDef(name = "TransitionUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class),
                }),
        @AnyMetaDef(name = "MergeNodeMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                }),
        @AnyMetaDef(name = "SuccessionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                        @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class),
                }),
        @AnyMetaDef(name = "AssociationMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Association", targetEntity = AssociationImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                        @MetaValue(value = "AssociationBlock", targetEntity = AssociationBlockImpl.class),
                }),
        @AnyMetaDef(name = "DataTypeMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "DataType", targetEntity = DataTypeImpl.class),
                        @MetaValue(value = "ValueType", targetEntity = ValueTypeImpl.class),
                }),
        @AnyMetaDef(name = "PropertyMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ValueProperty", targetEntity = ValuePropertyImpl.class),
                        @MetaValue(value = "Property", targetEntity = PropertyImpl.class),
                        @MetaValue(value = "PartProperty", targetEntity = PartPropertyImpl.class),
                        @MetaValue(value = "ReferenceProperty", targetEntity = ReferencePropertyImpl.class),
                        @MetaValue(value = "SnapshotFeature", targetEntity = SnapshotFeatureImpl.class),
                        @MetaValue(value = "TimeSliceFeature", targetEntity = TimeSliceFeatureImpl.class),
                        @MetaValue(value = "IndividualUsage", targetEntity = IndividualUsageImpl.class),
                        @MetaValue(value = "BlockProperty", targetEntity = BlockPropertyImpl.class),
                }),
        @AnyMetaDef(name = "SatisfyRequirementUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                }),
        @AnyMetaDef(name = "UsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class),
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                        @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class),
                        @MetaValue(value = "ValueProperty", targetEntity = ValuePropertyImpl.class),
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                        @MetaValue(value = "Property", targetEntity = PropertyImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "Usage", targetEntity = UsageImpl.class),
                        @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class),
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                        @MetaValue(value = "PartProperty", targetEntity = PartPropertyImpl.class),
                        @MetaValue(value = "ReferenceProperty", targetEntity = ReferencePropertyImpl.class),
                        @MetaValue(value = "SnapshotFeature", targetEntity = SnapshotFeatureImpl.class),
                        @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                        @MetaValue(value = "TimeSliceFeature", targetEntity = TimeSliceFeatureImpl.class),
                        @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                        @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                        @MetaValue(value = "TransferActionUsage", targetEntity = TransferActionUsageImpl.class),
                        @MetaValue(value = "IndividualUsage", targetEntity = IndividualUsageImpl.class),
                        @MetaValue(value = "BlockProperty", targetEntity = BlockPropertyImpl.class),
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                        @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class),
                }),
        @AnyMetaDef(name = "EndFeatureMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class),
                }),
        @AnyMetaDef(name = "FeatureValueMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "FeatureValue", targetEntity = FeatureValueImpl.class),
                }),
        @AnyMetaDef(name = "PortConjugationMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "PortConjugation", targetEntity = PortConjugationImpl.class),
                }),
        @AnyMetaDef(name = "AnnotationMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Annotation", targetEntity = AnnotationImpl.class),
                }),
        @AnyMetaDef(name = "PerformActionUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class),
                }),
        @AnyMetaDef(name = "LiteralIntegerMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class),
                }),
        @AnyMetaDef(name = "TypeMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class),
                        @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class),
                        @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class),
                        @MetaValue(value = "IndividualDefinition", targetEntity = IndividualDefinitionImpl.class),
                        @MetaValue(value = "QueryPathExpression", targetEntity = QueryPathExpressionImpl.class),
                        @MetaValue(value = "Activity", targetEntity = ActivityImpl.class),
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "Feature", targetEntity = FeatureImpl.class),
                        @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class),
                        @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class),
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                        @MetaValue(value = "Definition", targetEntity = DefinitionImpl.class),
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class),
                        @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class),
                        @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "Classifier", targetEntity = ClassifierImpl.class),
                        @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class),
                        @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class),
                        @MetaValue(value = "ValueProperty", targetEntity = ValuePropertyImpl.class),
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                        @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class),
                        @MetaValue(value = "Association", targetEntity = AssociationImpl.class),
                        @MetaValue(value = "DataType", targetEntity = DataTypeImpl.class),
                        @MetaValue(value = "Property", targetEntity = PropertyImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "Usage", targetEntity = UsageImpl.class),
                        @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class),
                        @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class),
                        @MetaValue(value = "Type", targetEntity = TypeImpl.class),
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                        @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class),
                        @MetaValue(value = "Parameter", targetEntity = ParameterImpl.class),
                        @MetaValue(value = "ItemFeature", targetEntity = ItemFeatureImpl.class),
                        @MetaValue(value = "PartProperty", targetEntity = PartPropertyImpl.class),
                        @MetaValue(value = "ReferenceProperty", targetEntity = ReferencePropertyImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class),
                        @MetaValue(value = "SourceEnd", targetEntity = SourceEndImpl.class),
                        @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class),
                        @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class),
                        @MetaValue(value = "SnapshotFeature", targetEntity = SnapshotFeatureImpl.class),
                        @MetaValue(value = "InstanceCreationExpression", targetEntity = InstanceCreationExpressionImpl.class),
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                        @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class),
                        @MetaValue(value = "ItemFlowFeature", targetEntity = ItemFlowFeatureImpl.class),
                        @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class),
                        @MetaValue(value = "AssociationBlock", targetEntity = AssociationBlockImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                        @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class),
                        @MetaValue(value = "Block", targetEntity = BlockImpl.class),
                        @MetaValue(value = "Class", targetEntity = ClassImpl.class),
                        @MetaValue(value = "TargetEnd", targetEntity = TargetEndImpl.class),
                        @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class),
                        @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class),
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                        @MetaValue(value = "TimeSliceFeature", targetEntity = TimeSliceFeatureImpl.class),
                        @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class),
                        @MetaValue(value = "Step", targetEntity = StepImpl.class),
                        @MetaValue(value = "LiteralReal", targetEntity = LiteralRealImpl.class),
                        @MetaValue(value = "Function", targetEntity = FunctionImpl.class),
                        @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                        @MetaValue(value = "Multiplicity", targetEntity = MultiplicityImpl.class),
                        @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class),
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                        @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class),
                        @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class),
                        @MetaValue(value = "ValueType", targetEntity = ValueTypeImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                        @MetaValue(value = "TransferActionUsage", targetEntity = TransferActionUsageImpl.class),
                        @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class),
                        @MetaValue(value = "IndividualUsage", targetEntity = IndividualUsageImpl.class),
                        @MetaValue(value = "ItemFlowEnd", targetEntity = ItemFlowEndImpl.class),
                        @MetaValue(value = "BlockExpression", targetEntity = BlockExpressionImpl.class),
                        @MetaValue(value = "BlockProperty", targetEntity = BlockPropertyImpl.class),
                        @MetaValue(value = "LiteralUnbounded", targetEntity = LiteralUnboundedImpl.class),
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                        @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class),
                        @MetaValue(value = "SequenceConstructionExpression", targetEntity = SequenceConstructionExpressionImpl.class),
                        @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                }),
        @AnyMetaDef(name = "ExhibitStateUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                }),
        @AnyMetaDef(name = "ExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class),
                        @MetaValue(value = "QueryPathExpression", targetEntity = QueryPathExpressionImpl.class),
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class),
                        @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class),
                        @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class),
                        @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class),
                        @MetaValue(value = "InstanceCreationExpression", targetEntity = InstanceCreationExpressionImpl.class),
                        @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                        @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class),
                        @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class),
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                        @MetaValue(value = "LiteralReal", targetEntity = LiteralRealImpl.class),
                        @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class),
                        @MetaValue(value = "BlockExpression", targetEntity = BlockExpressionImpl.class),
                        @MetaValue(value = "LiteralUnbounded", targetEntity = LiteralUnboundedImpl.class),
                        @MetaValue(value = "SequenceConstructionExpression", targetEntity = SequenceConstructionExpressionImpl.class),
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                }),
        @AnyMetaDef(name = "RelationshipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class),
                        @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class),
                        @MetaValue(value = "Import", targetEntity = ImportImpl.class),
                        @MetaValue(value = "Generalization", targetEntity = GeneralizationImpl.class),
                        @MetaValue(value = "ConjugatedPortTyping", targetEntity = ConjugatedPortTypingImpl.class),
                        @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class),
                        @MetaValue(value = "Membership", targetEntity = MembershipImpl.class),
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                        @MetaValue(value = "ImportCondition", targetEntity = ImportConditionImpl.class),
                        @MetaValue(value = "Redefinition", targetEntity = RedefinitionImpl.class),
                        @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class),
                        @MetaValue(value = "Association", targetEntity = AssociationImpl.class),
                        @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class),
                        @MetaValue(value = "FeatureValue", targetEntity = FeatureValueImpl.class),
                        @MetaValue(value = "Annotation", targetEntity = AnnotationImpl.class),
                        @MetaValue(value = "PortConjugation", targetEntity = PortConjugationImpl.class),
                        @MetaValue(value = "Relationship", targetEntity = RelationshipImpl.class),
                        @MetaValue(value = "FeatureTyping", targetEntity = FeatureTypingImpl.class),
                        @MetaValue(value = "FeatureMembership", targetEntity = FeatureMembershipImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "ConditionalImport", targetEntity = ConditionalImportImpl.class),
                        @MetaValue(value = "Subsetting", targetEntity = SubsettingImpl.class),
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                        @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class),
                        @MetaValue(value = "AssociationBlock", targetEntity = AssociationBlockImpl.class),
                        @MetaValue(value = "Superclassing", targetEntity = SuperclassingImpl.class),
                        @MetaValue(value = "Conjugation", targetEntity = ConjugationImpl.class),
                        @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class),
                        @MetaValue(value = "Ownership", targetEntity = OwnershipImpl.class),
                        @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class),
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                        @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class),
                        @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class),
                }),
        @AnyMetaDef(name = "ParameterMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Parameter", targetEntity = ParameterImpl.class),
                }),
        @AnyMetaDef(name = "ItemFeatureMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ItemFeature", targetEntity = ItemFeatureImpl.class),
                }),
        @AnyMetaDef(name = "PartPropertyMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "PartProperty", targetEntity = PartPropertyImpl.class),
                }),
        @AnyMetaDef(name = "FeatureTypingMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ConjugatedPortTyping", targetEntity = ConjugatedPortTypingImpl.class),
                        @MetaValue(value = "FeatureTyping", targetEntity = FeatureTypingImpl.class),
                }),
        @AnyMetaDef(name = "ReferencePropertyMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ReferenceProperty", targetEntity = ReferencePropertyImpl.class),
                        @MetaValue(value = "SnapshotFeature", targetEntity = SnapshotFeatureImpl.class),
                        @MetaValue(value = "TimeSliceFeature", targetEntity = TimeSliceFeatureImpl.class),
                }),
        @AnyMetaDef(name = "FeatureMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class),
                        @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class),
                        @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class),
                        @MetaValue(value = "FeatureValue", targetEntity = FeatureValueImpl.class),
                        @MetaValue(value = "FeatureMembership", targetEntity = FeatureMembershipImpl.class),
                        @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class),
                        @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class),
                        @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class),
                }),
        @AnyMetaDef(name = "InterfaceDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "ConditionalImportMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ConditionalImport", targetEntity = ConditionalImportImpl.class),
                }),
        @AnyMetaDef(name = "RequirementDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "PredicateMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class),
                }),
        @AnyMetaDef(name = "SourceEndMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "SourceEnd", targetEntity = SourceEndImpl.class),
                }),
        @AnyMetaDef(name = "SubsettingMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Redefinition", targetEntity = RedefinitionImpl.class),
                        @MetaValue(value = "Subsetting", targetEntity = SubsettingImpl.class),
                }),
        @AnyMetaDef(name = "BehaviorMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Activity", targetEntity = ActivityImpl.class),
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class),
                        @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class),
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                        @MetaValue(value = "Function", targetEntity = FunctionImpl.class),
                        @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "SnapshotFeatureMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "SnapshotFeature", targetEntity = SnapshotFeatureImpl.class),
                }),
        @AnyMetaDef(name = "LiteralBooleanMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class),
                }),
        @AnyMetaDef(name = "InstanceCreationExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "InstanceCreationExpression", targetEntity = InstanceCreationExpressionImpl.class),
                }),
        @AnyMetaDef(name = "InteractionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                }),
        @AnyMetaDef(name = "LiteralExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class),
                        @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class),
                        @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class),
                        @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class),
                        @MetaValue(value = "LiteralReal", targetEntity = LiteralRealImpl.class),
                        @MetaValue(value = "LiteralUnbounded", targetEntity = LiteralUnboundedImpl.class),
                }),
        @AnyMetaDef(name = "ParameterMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class),
                        @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class),
                }),
        @AnyMetaDef(name = "ItemFlowFeatureMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ItemFlowFeature", targetEntity = ItemFlowFeatureImpl.class),
                }),
        @AnyMetaDef(name = "ActionUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class),
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                        @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                        @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class),
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                        @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class),
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                        @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class),
                        @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                        @MetaValue(value = "TransferActionUsage", targetEntity = TransferActionUsageImpl.class),
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                        @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class),
                }),
        @AnyMetaDef(name = "AssociationBlockMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "AssociationBlock", targetEntity = AssociationBlockImpl.class),
                }),
        @AnyMetaDef(name = "SuperclassingMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Superclassing", targetEntity = SuperclassingImpl.class),
                }),
        @AnyMetaDef(name = "ConstraintUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                }),
        @AnyMetaDef(name = "FeatureReferenceExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "QueryPathExpression", targetEntity = QueryPathExpressionImpl.class),
                        @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class),
                }),
        @AnyMetaDef(name = "BlockMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "IndividualDefinition", targetEntity = IndividualDefinitionImpl.class),
                        @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "AssociationBlock", targetEntity = AssociationBlockImpl.class),
                        @MetaValue(value = "Block", targetEntity = BlockImpl.class),
                }),
        @AnyMetaDef(name = "ClassMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "IndividualDefinition", targetEntity = IndividualDefinitionImpl.class),
                        @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class),
                        @MetaValue(value = "Association", targetEntity = AssociationImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                        @MetaValue(value = "AssociationBlock", targetEntity = AssociationBlockImpl.class),
                        @MetaValue(value = "Block", targetEntity = BlockImpl.class),
                        @MetaValue(value = "Class", targetEntity = ClassImpl.class),
                }),
        @AnyMetaDef(name = "ConjugationMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "PortConjugation", targetEntity = PortConjugationImpl.class),
                        @MetaValue(value = "Conjugation", targetEntity = ConjugationImpl.class),
                }),
        @AnyMetaDef(name = "TargetEndMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "TargetEnd", targetEntity = TargetEndImpl.class),
                }),
        @AnyMetaDef(name = "InvariantMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class),
                }),
        @AnyMetaDef(name = "ConnectorMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class),
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                        @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class),
                        @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class),
                        @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class),
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                }),
        @AnyMetaDef(name = "OwnershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Ownership", targetEntity = OwnershipImpl.class),
                }),
        @AnyMetaDef(name = "QueryQualifierExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                }),
        @AnyMetaDef(name = "TimeSliceFeatureMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "TimeSliceFeature", targetEntity = TimeSliceFeatureImpl.class),
                }),
        @AnyMetaDef(name = "BindingConnectorMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class),
                }),
        @AnyMetaDef(name = "ElementMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class),
                        @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class),
                        @MetaValue(value = "Import", targetEntity = ImportImpl.class),
                        @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class),
                        @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class),
                        @MetaValue(value = "IndividualDefinition", targetEntity = IndividualDefinitionImpl.class),
                        @MetaValue(value = "QueryPathExpression", targetEntity = QueryPathExpressionImpl.class),
                        @MetaValue(value = "Activity", targetEntity = ActivityImpl.class),
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "Generalization", targetEntity = GeneralizationImpl.class),
                        @MetaValue(value = "Feature", targetEntity = FeatureImpl.class),
                        @MetaValue(value = "ConjugatedPortTyping", targetEntity = ConjugatedPortTypingImpl.class),
                        @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class),
                        @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class),
                        @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class),
                        @MetaValue(value = "Membership", targetEntity = MembershipImpl.class),
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                        @MetaValue(value = "Definition", targetEntity = DefinitionImpl.class),
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class),
                        @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class),
                        @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                        @MetaValue(value = "Package", targetEntity = PackageImpl.class),
                        @MetaValue(value = "ImportCondition", targetEntity = ImportConditionImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "Classifier", targetEntity = ClassifierImpl.class),
                        @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class),
                        @MetaValue(value = "Redefinition", targetEntity = RedefinitionImpl.class),
                        @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class),
                        @MetaValue(value = "ValueProperty", targetEntity = ValuePropertyImpl.class),
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                        @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class),
                        @MetaValue(value = "Association", targetEntity = AssociationImpl.class),
                        @MetaValue(value = "DataType", targetEntity = DataTypeImpl.class),
                        @MetaValue(value = "Property", targetEntity = PropertyImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "Usage", targetEntity = UsageImpl.class),
                        @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class),
                        @MetaValue(value = "FeatureValue", targetEntity = FeatureValueImpl.class),
                        @MetaValue(value = "Annotation", targetEntity = AnnotationImpl.class),
                        @MetaValue(value = "PortConjugation", targetEntity = PortConjugationImpl.class),
                        @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class),
                        @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class),
                        @MetaValue(value = "Type", targetEntity = TypeImpl.class),
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                        @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class),
                        @MetaValue(value = "Relationship", targetEntity = RelationshipImpl.class),
                        @MetaValue(value = "Parameter", targetEntity = ParameterImpl.class),
                        @MetaValue(value = "ItemFeature", targetEntity = ItemFeatureImpl.class),
                        @MetaValue(value = "FeatureTyping", targetEntity = FeatureTypingImpl.class),
                        @MetaValue(value = "PartProperty", targetEntity = PartPropertyImpl.class),
                        @MetaValue(value = "FeatureMembership", targetEntity = FeatureMembershipImpl.class),
                        @MetaValue(value = "ReferenceProperty", targetEntity = ReferencePropertyImpl.class),
                        @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                        @MetaValue(value = "ConditionalImport", targetEntity = ConditionalImportImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class),
                        @MetaValue(value = "SourceEnd", targetEntity = SourceEndImpl.class),
                        @MetaValue(value = "Subsetting", targetEntity = SubsettingImpl.class),
                        @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class),
                        @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class),
                        @MetaValue(value = "SnapshotFeature", targetEntity = SnapshotFeatureImpl.class),
                        @MetaValue(value = "InstanceCreationExpression", targetEntity = InstanceCreationExpressionImpl.class),
                        @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                        @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class),
                        @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class),
                        @MetaValue(value = "ItemFlowFeature", targetEntity = ItemFlowFeatureImpl.class),
                        @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class),
                        @MetaValue(value = "AssociationBlock", targetEntity = AssociationBlockImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                        @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class),
                        @MetaValue(value = "Superclassing", targetEntity = SuperclassingImpl.class),
                        @MetaValue(value = "Block", targetEntity = BlockImpl.class),
                        @MetaValue(value = "Class", targetEntity = ClassImpl.class),
                        @MetaValue(value = "Conjugation", targetEntity = ConjugationImpl.class),
                        @MetaValue(value = "TargetEnd", targetEntity = TargetEndImpl.class),
                        @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class),
                        @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class),
                        @MetaValue(value = "Ownership", targetEntity = OwnershipImpl.class),
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                        @MetaValue(value = "TimeSliceFeature", targetEntity = TimeSliceFeatureImpl.class),
                        @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class),
                        @MetaValue(value = "Element", targetEntity = ElementImpl.class),
                        @MetaValue(value = "Step", targetEntity = StepImpl.class),
                        @MetaValue(value = "LiteralReal", targetEntity = LiteralRealImpl.class),
                        @MetaValue(value = "Function", targetEntity = FunctionImpl.class),
                        @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                        @MetaValue(value = "Multiplicity", targetEntity = MultiplicityImpl.class),
                        @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class),
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                        @MetaValue(value = "Comment", targetEntity = CommentImpl.class),
                        @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class),
                        @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class),
                        @MetaValue(value = "ValueType", targetEntity = ValueTypeImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                        @MetaValue(value = "TransferActionUsage", targetEntity = TransferActionUsageImpl.class),
                        @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class),
                        @MetaValue(value = "IndividualUsage", targetEntity = IndividualUsageImpl.class),
                        @MetaValue(value = "ItemFlowEnd", targetEntity = ItemFlowEndImpl.class),
                        @MetaValue(value = "BlockExpression", targetEntity = BlockExpressionImpl.class),
                        @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class),
                        @MetaValue(value = "BlockProperty", targetEntity = BlockPropertyImpl.class),
                        @MetaValue(value = "LiteralUnbounded", targetEntity = LiteralUnboundedImpl.class),
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                        @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class),
                        @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class),
                        @MetaValue(value = "SequenceConstructionExpression", targetEntity = SequenceConstructionExpressionImpl.class),
                        @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                }),
        @AnyMetaDef(name = "StepMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class),
                        @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class),
                        @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class),
                        @MetaValue(value = "QueryPathExpression", targetEntity = QueryPathExpressionImpl.class),
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                        @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                        @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class),
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                        @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                        @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class),
                        @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                        @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                        @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class),
                        @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class),
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                        @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                        @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class),
                        @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class),
                        @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                        @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class),
                        @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class),
                        @MetaValue(value = "InstanceCreationExpression", targetEntity = InstanceCreationExpressionImpl.class),
                        @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class),
                        @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class),
                        @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                        @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class),
                        @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class),
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                        @MetaValue(value = "Step", targetEntity = StepImpl.class),
                        @MetaValue(value = "LiteralReal", targetEntity = LiteralRealImpl.class),
                        @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                        @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class),
                        @MetaValue(value = "TransferActionUsage", targetEntity = TransferActionUsageImpl.class),
                        @MetaValue(value = "BlockExpression", targetEntity = BlockExpressionImpl.class),
                        @MetaValue(value = "LiteralUnbounded", targetEntity = LiteralUnboundedImpl.class),
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                        @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class),
                        @MetaValue(value = "SequenceConstructionExpression", targetEntity = SequenceConstructionExpressionImpl.class),
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                }),
        @AnyMetaDef(name = "LiteralRealMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "LiteralReal", targetEntity = LiteralRealImpl.class),
                }),
        @AnyMetaDef(name = "FunctionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                        @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                        @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class),
                        @MetaValue(value = "Function", targetEntity = FunctionImpl.class),
                }),
        @AnyMetaDef(name = "SendActionUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                }),
        @AnyMetaDef(name = "MultiplicityMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Multiplicity", targetEntity = MultiplicityImpl.class),
                        @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class),
                }),
        @AnyMetaDef(name = "OperatorExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "QueryQualifierExpression", targetEntity = QueryQualifierExpressionImpl.class),
                        @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class),
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                }),
        @AnyMetaDef(name = "InterfaceUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                }),
        @AnyMetaDef(name = "PortUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class),
                }),
        @AnyMetaDef(name = "CommentMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "Comment", targetEntity = CommentImpl.class),
                }),
        @AnyMetaDef(name = "PortDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class),
                        @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "ValueTypeMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ValueType", targetEntity = ValueTypeImpl.class),
                }),
        @AnyMetaDef(name = "ConnectionUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                        @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                }),
        @AnyMetaDef(name = "TransferActionUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                        @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                        @MetaValue(value = "TransferActionUsage", targetEntity = TransferActionUsageImpl.class),
                }),
        @AnyMetaDef(name = "MultiplicityRangeMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class),
                }),
        @AnyMetaDef(name = "ItemFlowEndMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ItemFlowEnd", targetEntity = ItemFlowEndImpl.class),
                }),
        @AnyMetaDef(name = "IndividualUsageMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "IndividualUsage", targetEntity = IndividualUsageImpl.class),
                }),
        @AnyMetaDef(name = "StateSubactionMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class),
                }),
        @AnyMetaDef(name = "BlockExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "BlockExpression", targetEntity = BlockExpressionImpl.class),
                }),
        @AnyMetaDef(name = "BlockPropertyMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "PartProperty", targetEntity = PartPropertyImpl.class),
                        @MetaValue(value = "ReferenceProperty", targetEntity = ReferencePropertyImpl.class),
                        @MetaValue(value = "SnapshotFeature", targetEntity = SnapshotFeatureImpl.class),
                        @MetaValue(value = "TimeSliceFeature", targetEntity = TimeSliceFeatureImpl.class),
                        @MetaValue(value = "IndividualUsage", targetEntity = IndividualUsageImpl.class),
                        @MetaValue(value = "BlockProperty", targetEntity = BlockPropertyImpl.class),
                }),
        @AnyMetaDef(name = "LiteralUnboundedMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "LiteralUnbounded", targetEntity = LiteralUnboundedImpl.class),
                }),
        @AnyMetaDef(name = "ForkNodeMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                }),
        @AnyMetaDef(name = "TransitionFeatureMembershipMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class),
                }),
        @AnyMetaDef(name = "ControlNodeMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                        @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                        @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                        @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                        @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class),
                }),
        @AnyMetaDef(name = "SequenceConstructionExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "SequenceConstructionExpression", targetEntity = SequenceConstructionExpressionImpl.class),
                }),
        @AnyMetaDef(name = "StateDefinitionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                }),
        @AnyMetaDef(name = "QueryPathStepExpressionMetaDef", metaType = "string", idType = "java.util.UUID",
                metaValues = {
                        @MetaValue(value = "QueryPathStepExpression", targetEntity = QueryPathStepExpressionImpl.class),
                }),
})

// TODO Abstract this concept to cli option
@GenericGenerators(value = {
        @GenericGenerator(name = "UseExistingOrGenerateUUIDGenerator", strategy = "jpa.UseExistingOrGenerateUUIDGenerator")
})
package org.omg.sysml.metamodel.impl;

import org.hibernate.annotations.AnyMetaDef;
import org.hibernate.annotations.AnyMetaDefs;
import org.hibernate.annotations.MetaValue;

// TODO Abstract this concept to cli option
import org.hibernate.annotations.GenericGenerators;
import org.hibernate.annotations.GenericGenerator;